{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["radius","a","check","navigator","userAgent","vendor","window","opera","test","substr","mobileAndTabletCheck","geoMarkerStyle","Style","image","CircleStyle","fill","Fill","color","stroke","Stroke","width","drawCircleInMeter","center","circleFeature","edgeCoordinate","groundRadius","getDistance","transform","circle","Circle","Feature","vectorSource","VectorSource","features","projection","VectorLayer","source","style","drawPosition","event","geolocation","position","getPosition","vectorContext","getVectorContext","currentPoint","Point","feature","drawFeature","changeCirclePosition","circleLayer","getSource","clear","addFeatures","App","deferredPrompt","useState","zoneOk","setZoneOk","showInstallPromotion","setShowInstallPromotion","circleCenter","setCircleCenter","setPosition","setGeolocation","setCircleLayer","map","setMap","init","circleCenterString","localStorage","getItem","JSON","parse","Array","isArray","OSM","crossOrigin","tileLayer","Tile","Map","target","layers","view","View","fromLonLat","zoom","controls","Geolocation","trackingOptions","enableHighAccuracy","on","useEffect","getTracking","setTracking","error","console","warn","setItem","stringify","getView","animate","pt1","turf","toLonLat","pt2","isInZone","vibrate","render","addEventListener","e","preventDefault","className","id","onClick","prompt","userChoice","then","choiceResult","outcome","log","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2291b0ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Map from 'ol/Map';\nimport { fromCircle } from 'ol/geom/Polygon';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat, toLonLat, getPointResolution, transform } from 'ol/proj';\nimport { METERS_PER_UNIT } from 'ol/proj/Units';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Style from 'ol/style/Style';\nimport Stroke from 'ol/style/Stroke';\nimport Fill from 'ol/style/Fill';\nimport CircleStyle from 'ol/style/Circle';\nimport Geolocation from 'ol/Geolocation';\nimport {getVectorContext} from 'ol/render';\nimport Point from 'ol/geom/Point';\nimport Circle from 'ol/geom/Circle';\nimport { getDistance } from 'ol/sphere';\n\nimport Feature from 'ol/Feature';\nimport * as turf from '@turf/turf'\n\n//TODO: fix les 1500 km\n//TODO: fair emarcher reactive app\n\nfunction App() {\n  const [zoneOk, setZoneOk] = useState(false);\n  const [showInstallPromotion, setShowInstallPromotion] = useState(false);\n  const [circleCenter, setCircleCenter] = useState(null);\n  const [position, setPosition] = useState(null);\n  const [geolocation, setGeolocation] = useState(null);\n  const [circleLayer, setCircleLayer] = useState(null);\n  const [map, setMap] = useState(null);\n\n  const oneKmInParisInThisFuckingProjection = 1500;\n\n  const init = async () => {\n    const circleCenterString = localStorage.getItem('circleCenter');\n\n    var circleCenter = null;\n    if (circleCenterString) {\n      var circleCenter = JSON.parse(circleCenterString);\n      if (!Array.isArray(circleCenter))\n        circleCenter = null;\n    }\n    setCircleCenter(circleCenter);\n\n    const source = new OSM({crossOrigin: null});\n    const tileLayer = new Tile({\n      source: source\n    });\n\n    const circleLayer = drawCircleInMeter(circleCenter, oneKmInParisInThisFuckingProjection);\n\n    var map = new Map({\n      target: 'map',\n      layers: [\n        tileLayer,\n        //maskZonesLayer,\n        circleLayer\n      ],\n      view: new View({\n        projection: 'EPSG:3857',\n        center: circleCenter ? circleCenter : fromLonLat([2.3488, 48.8534]),\n        zoom: 13\n      }),\n      controls: []\n    });\n\n    var geolocation = new Geolocation({\n      // enableHighAccuracy must be set to true to have the heading value.\n      trackingOptions: {\n        enableHighAccuracy: true,\n      },\n      projection: 'EPSG:3857',\n    });\n\n    tileLayer.on('postrender', (event) => drawPosition(event, geolocation /*geolocation*/ ));\n\n    setGeolocation(geolocation);\n    setCircleLayer(circleLayer);\n    setMap(map);\n  }\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (!geolocation || geolocation.getTracking())\n      return;\n\n    geolocation.setTracking(true);\n\n    // update the HTML page when the position changes.\n    geolocation.on('change', () => {\n      setPosition(geolocation.getPosition());\n    });\n\n    // handle geolocation error.\n    geolocation.on('error', function (error) {\n      console.warn('geolocation error', error);\n    });\n  }, [geolocation, map]);\n\n  useEffect(() => {\n    if (circleCenter) {\n      changeCirclePosition(circleCenter, oneKmInParisInThisFuckingProjection, circleLayer);\n      localStorage.setItem('circleCenter', JSON.stringify(circleCenter));\n      map.getView().animate({center: circleCenter});\n    }\n  }, [circleCenter, circleLayer]);\n\n  useEffect(() => {\n    if (!position || !circleCenter)\n      return;\n\n    const pt1 = turf.point(toLonLat(position));\n    const pt2 = turf.point(toLonLat(circleCenter));\n    const distance = turf.distance(pt1, pt2);\n    const isInZone = distance < 1;\n\n    //vibrate on transition\n    if (!isInZone && zoneOk)\n      window.navigator.vibrate(300);\n\n    setZoneOk(isInZone);\n\n    map.render();\n  }, [position, circleCenter])\n\n\n  ///////////////////////\n  //PWA stuff to be moved\n\n  let deferredPrompt;\n  window.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent the mini-infobar from appearing on mobile\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    deferredPrompt = e;\n    // Update UI notify the user they can install the PWA\n    setShowInstallPromotion(true);\n  });\n\n  function installPwa() {\n    // Hide the app provided install promotion\n    setShowInstallPromotion(false);\n    // Show the install prompt\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice.then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the install prompt');\n      } else {\n        console.log('User dismissed the install prompt');\n      }\n    });\n  }\n\n  function changeCirclePositionWithCurrentPosition() {\n    setCircleCenter(geolocation.getPosition());\n  }\n\n  function recenterView() {\n    map.getView().animate({center: circleCenter});\n  }\n\n  return (\n    <div className=\"app\">\n      <div id=\"map\" className=\"map\"></div>\n      <header className={ (circleCenter == null ? 'need-click' : zoneOk ? 'zone-ok' : 'zone-nok') + ' app-header' }></header>\n      <div className={`use-position ${circleCenter == null ? 'need-click' : ''}`} onClick={changeCirclePositionWithCurrentPosition}>🏠</div>\n      <div className={`center-view`} onClick={recenterView}>🎯</div>\n      {showInstallPromotion ? <footer className='install-footer' onClick={installPwa}>Install as an App</footer> : null}\n\n    </div>\n  );\n}\n\nconst mobileAndTabletCheck = function() {\n  let check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n  return check;\n};\n\nlet radius = mobileAndTabletCheck() ? 3 : 7;\n\nconst geoMarkerStyle = new Style({\n  image: new CircleStyle({\n    radius: radius,\n    fill: new Fill({color: 'black'}),\n    stroke: new Stroke({\n      color: 'white',\n      width: 2,\n    }),\n  })\n});\n\n\nvar drawCircleInMeter = (center, radius) => {\n  var edgeCoordinate = [center[0] + radius, center[1]];\n  var groundRadius = getDistance(\n      transform(center, 'EPSG:3857', 'EPSG:4326'),\n      transform(edgeCoordinate, 'EPSG:3857', 'EPSG:4326'),\n      6378137 // earth radius\n  );\n\n  var circleFeature;\n  if (center) {\n    var circle = new Circle(center, groundRadius);\n    circleFeature = new Feature(circle);\n  } else {\n    circleFeature = new Feature();\n  }\n\n  var vectorSource = new VectorSource({\n    features: [circleFeature],\n    projection: 'EPSG:3857',\n  });\n\n  return new VectorLayer({\n    source: vectorSource,\n    style: [\n    new Style({\n        stroke: new Stroke({\n            color: 'blue',\n            width: 3\n        }),\n        fill: new Fill({\n            color: 'rgba(0, 0, 255, 0.1)'\n        })\n    })]\n  });\n}\n\n\nfunction drawPosition(event, geolocation) {\n  let position = geolocation.getPosition();\n  if (!position)\n    return;\n  var vectorContext = getVectorContext(event);\n  var currentPoint = new Point(position);\n  var feature = new Feature(currentPoint);\n  vectorContext.drawFeature(feature, geoMarkerStyle);\n};\n\nvar changeCirclePosition = function(center, radius, circleLayer) {\n  var circle = new Circle(center, radius);\n  var circleFeature = new Feature(circle);\n  circleLayer.getSource().clear();\n  circleLayer.getSource().addFeatures([circleFeature]);\n};\n\n\n//Test lat long : (48.857351 , 2.337242)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}